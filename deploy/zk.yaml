--
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
 labels:
   app: zookeeper
 name: zookeeper
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: zookeeper
---
apiVersion: v1
kind: Service
metadata:
 labels:
   app: zookeeper
 name: zookeeper
spec:
 clusterIP: None
 ports:
 - name: zk-client-port
   port: 2181
 - name: zk-fwr-port
   port: 2888
 - name: zk-elec-port
   port: 3888
 selector:
   app: zookeeper
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
 labels:
   app: zookeeper
 name: zookeeper
spec:
 replicas: 3
 selector:
   matchLabels:
     app: zookeeper
 serviceName: zookeeper
 podManagementPolicy: Parallel
 template:
   metadata:
     labels:
       app: zookeeper
   spec:
     containers:
     - env:
       - name: ZOO_SERVERS
         value: server.0=zookeeper-0.zookeeper:2888:3888 server.1=zookeeper-1.zookeeper:2888:3888 server.2=zookeeper-2.zookeeper:2888:3888
       - name: SERVER_JVMFLAGS
         value: -Xms256m -Xmx256m
       image: zookeeper:3.4.13
       name: zookeeper
       command: ["/bin/sh"]
       args: ["-c", "ZOO_MY_ID=$(echo `hostname` | cut -d '-' -f2) /docker-entrypoint.sh zkServer.sh start-foreground"]
       ports:
       - containerPort: 2181
         name: zk-client-port
       - containerPort: 2888
         name: zk-fwr-port
       - containerPort: 3888
         name: zk-elec-port
       resources:
         limits:
           cpu: 1
           memory: 512Mi
         requests:
           cpu: 1
           memory: 512Mi
       volumeMounts:
       - mountPath: /data
         name: druid-test-zk-data
       - mountPath: /datalog
         name: druid-test-zk-data-log
 volumeClaimTemplates:
 - metadata:
     name: druid-test-zk-data
   spec:
     accessModes:
     - ReadWriteOnce
     resources:
       requests:
         storage: 300Mi
 - metadata:
     name: druid-test-zk-data-log
   spec:
     accessModes:
     - ReadWriteOnce
     resources:
       requests:
         storage: 500Mi